% Fredrik TÃ¥kvist
% ---------------
% make the figure, with elevator shaft, elevator and floor lamps
function mk_figure()
    global shaftPos floorPos liftLH liftRH liftDH light1H light2H light3H light4H light5H figH
    % create figure
    figureWidth = 400;
    figureHeight = 400;
    screenSize = get(0,'ScreenSize');
    screenWidth = screenSize(3);
    screenHeight = screenSize(4);
    figurePos = [(screenWidth - figureWidth)/2 ...
                 (screenHeight - figureHeight)/2 ...
                 figureWidth figureHeight];
    figH = figure('Name', 'Elevator', ...
        'Units', 'pixels', ...
        'Position', figurePos, ...
        'Resize', 'Off', ...
        'MenuBar', 'none');
    % position of elevator shaft and first floor
    shaftPos = [.7 .1 .2 .8];
    floorPos = [shaftPos(1) shaftPos(2) shaftPos(3) shaftPos(4)/5];
    % draw floors
    for k = 0:4
        annotation('Rectangle', ...
            'Position', floorPos + [0 floorPos(4)*k 0 0], ...
            'FaceColor', '#606060');
    end
    % make elevator
    liftLH = annotation('Rectangle', ...
        'Position', floorPos - [0 0 shaftPos(3)/2 0], ...
        'FaceColor', '#C9C9C9');
    liftRH = annotation('Rectangle', ...
        'Position', liftLH.Position + [liftLH.Position(3) 0 0 0], ...
        'FaceColor', '#C9C9C9');
    % make elevator doors (just a white rectangle, 
    % invisible when doors are closed
    liftDH = annotation('Rectangle', ...
        'Position', floorPos + [shaftPos(3)/8 0 -shaftPos(3)/4 0], ...
        'FaceColor', '#FFFFFF', ...
        'Visible', 'Off');
    
    % make floor lights
    lightDiameter = .05;
    lightPos = [.6 floorPos(2)+(floorPos(4)-lightDiameter)/2 ...
                lightDiameter lightDiameter];
    light1H = annotation('Ellipse', ...
        'Position', lightPos, ...
        'FaceColor', '#C9C9C9');
    light2H = annotation('Ellipse', ...
        'Position', lightPos + [0 floorPos(4) 0 0], ...
        'FaceColor', '#C9C9C9');
    light3H = annotation('Ellipse', ...
        'Position', lightPos + [0 floorPos(4)*2 0 0], ...
        'FaceColor', '#C9C9C9');
    light4H = annotation('Ellipse', ...
        'Position', lightPos + [0 floorPos(4)*3 0 0], ...
        'FaceColor', '#C9C9C9');
    light5H = annotation('Ellipse', ...
        'Position', lightPos + [0 floorPos(4)*4 0 0], ...
        'FaceColor', '#C9C9C9');
end

